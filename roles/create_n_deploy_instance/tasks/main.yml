---
# tasks file for create_n_deploy_instance

    - name: Create security group
      ec2_group:
        name: "{{ project_name }}_security_group"
        description: "{{ project_name }} security group"
        region: "{{ region }}"
        rules:
          - proto: tcp  # ssh
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp  # http
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp  # https
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: test_firewall

    - name: Create an EC2 key
      ec2_key:
        name: "{{ project_name }}-{{ env }}-key"
        region: "{{ region }}"
      register: ec2_key

    - name: Save private key
      copy: content="{{ ec2_key.key.private_key }}" dest="/home/sindhu/aws-private.pem" mode=0600
      when: ec2_key.changed

    - name: Create an EC2 instance
      ec2:
        key_name: "{{ project_name }}-{{ env }}-key"
        region: "{{ region }}"
        group_id: "{{ test_firewall.group_id }}"
        instance_type: "{{ instance_type }}"
        image: "{{ ami }}"
        user_data: |
          #!/bin/bash
          apt update && apt install python -y
        wait: yes
        instance_tags:
            env: "{{ env }}"
        count_tag: env
        exact_count: 1
        vpc_subnet_id: subnet-b10d7cf8
        assign_public_ip: yes
      register: ec2

    #- debug: var=item.public_ip
    #  with_items: "{{ ec2.tagged_instances }}"

    - name: Add the newly created EC2 instance(s) to host group
      lineinfile: dest={{ hostpath }}
        regexp={{ item.public_ip }} 
        insertafter="^\[webserver\]" 
        line="{{ item.public_ip }} {{hoststring}}"
        state=present
      with_items: "{{ ec2.tagged_instances }}"

    - wait_for: path={{ hostpath }} search_regex={{hoststring}}

    - name: modify virtualhost file
      lineinfile: dest=/home/sindhu/secure-webserver/sindhu/files/google.com
        regexp="server_name" 
        insertafter="server_name" 
        line="    server_name {{ item.public_ip }} {{ item.public_dns_name }} www.{{ item.public_dns_name }};"
        state=present
      with_items: "{{ ec2.tagged_instances }}"

    - name: Wait for SSH to come up
      local_action: wait_for 
                    host={{ item.public_ip }} 
                    port=22 
                    state=started
      with_items: "{{ ec2.tagged_instances }}"

